---
kind: Service
apiVersion: v1
metadata:
  name: demoapp-service
spec:
  selector:
    app: demoapp
  ports:
    - port: 80
      targetPort: 8080
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: demoapp-volume
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: demoapp
  name: demoapp
spec:
  serviceName: demoapp
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: demoapp
  template:
    metadata:
      labels:
        app: demoapp
    spec:
      containers:
      - image: ghcr.io/eumel8/demoapp:1.0.0
        imagePullPolicy: Always
        name: demoapp
        ports:
        - containerPort: 8080
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsUser: 65535
          runAsGroup: 65535
        env:
        - name: MYSQL_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: MYSQL_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DATA_DIR
          value: "/data" # external pvc
        volumeMounts:
        - mountPath: /data
          name: demoapp-volume
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65535
        supplementalGroups:
        - 65535
      terminationGracePeriodSeconds: 3
      serviceAccountName: demoapp
      volumes:
      - name: demoapp-volume
        persistentVolumeClaim:
          claimName: demoapp-volume
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: demoapp
  name: demoapp
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app: demoapp
  name: demoapp
rules:
- apiGroups:
  - ""
  resources:
  - "*"
  verbs:
  - "*"
- apiGroups:
  - "otc.mcsps.de"
  resources:
  - "rdss"
  verbs:
  - "*"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: demoapp
  name: demoapp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: demoapp
subjects:
  - kind: ServiceAccount
    name: demoapp
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  annotations:
  name: np-demoapp
spec:
  egress:
  - ports:
    - port: 53
      protocol: TCP
  - ports:
    - port: 53
      protocol: UDP
  - ports:
    - port: 3306
      protocol: TCP
  - ports:
    - port: 443
      protocol: TCP
  - ports:
    - port: 6443
      protocol: TCP
  podSelector:
    matchLabels:
      app: demoapp
  policyTypes:
  - Egress
