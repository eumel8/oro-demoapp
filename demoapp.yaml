---
apiVersion: v1
data:
  run.sh: |
    CREATE DATABASE IF NOT EXISTS app;
    USE app;
    CREATE TABLE IF NOT EXISTS `employee` (
      `id` int(6) unsigned NOT NULL AUTO_INCREMENT,
      `name` varchar(30) NOT NULL,
      `city` varchar(30) NOT NULL,
      `photo` varchar(128) NOT NULL,
      PRIMARY KEY (`id`)
    ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=latin1;
    CREATE USER IF NOT EXISTS 'app'@'%' IDENTIFIED BY 'A123456+';
    GRANT ALL PRIVILEGES ON app.* TO 'app'@'%';
kind: ConfigMap
metadata:
  labels:
    app: demoapp-mysql
  name: demoapp-createdb
---
kind: Service
apiVersion: v1
metadata:
  name: demoapp-mysql
spec:
  selector:
    app: demoapp-mysql
  ports:
    - port: 80
      targetPort: 8080
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: demoapp-volume
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: demoapp-mysql
  name: demoapp-mysql
spec:
  serviceName: demoapp-mysql
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: demoapp-mysql
  template:
    metadata:
      labels:
        app: demoapp-mysql
    spec:
      containers:
      - image: mtr.devops.telekom.de/mcsps/demoapp:2.0.0
        imagePullPolicy: Always
        name: demoapp
        ports:
        - containerPort: 8080
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsUser: 65535
          runAsGroup: 65535
        env:
        - name: DATA_DIR
          value: "/data" # external pvc
        - name: MYSQL_HOST
          value: xx.xx.xx.xx # demo db host
        - name: MYSQL_PORT
          value: "3306" 
        - name: MYSQL_DB
          value: app
        - name: MYSQL_USER
          value: app
        - name: MYSQL_PASSWORD
          value: A123456+ # demo db password
        volumeMounts:
        - mountPath: /data
          name: demoapp-volume
      initContainers:
      - name: dbinstall
        imagePullPolicy: IfNotPresent
        image: mtr.devops.telekom.de/mcsps/mysql-client:0.0.4
        command: ["sh","-c"]
        # first installation demo db
        args: ["mysql -hxx.xx.xx.xx -uroot -pAa12345678+ < /createdb/run.sh"]
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsUser: 65535
          runAsGroup: 65535
        volumeMounts:
        - name: createdb
          mountPath: /createdb
      dnsPolicy: ClusterFirst
      hostNetwork: false
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65535
        supplementalGroups:
        - 65535
      terminationGracePeriodSeconds: 3
      serviceAccountName: demoapp-mysql
      volumes:
      - name: createdb
        configMap:
          name: demoapp-createdb
      - name: demoapp-volume
        persistentVolumeClaim:
          claimName: demoapp-volume
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: demoapp-mysql
  name: demoapp-mysql
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app: demoapp-mysql
  name: demoapp-mysql
rules:
- apiGroups:
  - ""
  resources:
  - "*"
  verbs:
  - "*"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: demoapp-mysql
  name: demoapp-mysql
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: demoapp-mysql
subjects:
  - kind: ServiceAccount
    name: demoapp-mysql
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  annotations:
  name: np-demoapp-mysql
spec:
  egress:
  - ports:
    - port: 3306
      protocol: TCP
  - ports:
    - port: 443
      protocol: TCP
  podSelector:
    matchLabels:
      app: demoapp-mysql
  policyTypes:
  - Egress
